{"version":3,"sources":["constants.js","components/GoodList.jsx","components/Buttons.jsx","App.jsx","index.jsx"],"names":["SORT_FIELD","GoodList","goods","map","good","Buttons","props","sortField","sortBy","isReversed","changeOrder","className","type","onClick","classNames","prev","goodsFromServer","App","useState","setSortField","setIsReversed","preparedGoods","options","sort","good1","good2","localeCompare","length","reverse","getPreparedGood","ReactDOM","render","document","getElementById"],"mappings":"0NAAaA,EACD,WADCA,EAEH,S,OCAGC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,S,gBCFjBC,EAAU,SAACC,GACtB,IACEC,EAIED,EAJFC,UACAC,EAGEF,EAHFE,OACAC,EAEEH,EAFFG,WACAC,EACEJ,EADFI,YAQF,OACE,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAML,EAAOR,IACtBW,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYP,IAAcP,IAJ9B,iCAUA,wBACEY,KAAK,SACLC,QAAS,kBAAML,EAAOR,IACtBW,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYP,IAAcP,IAJ9B,4BAUA,wBACEY,KAAK,SACLC,QAAS,kBAAMH,GAAY,SAAAK,GAAI,OAAKA,MACpCJ,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAAaL,IAJjB,sBAUEF,GAAaE,IACb,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAzCkB,WACxBL,EAAO,IACPE,GAAY,IAoCR,uBC1CKM,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOX,EAAP,KAAkBY,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBW,EAAnB,KAEMC,EA/BR,SAAyBnB,EAAOoB,GAC9B,IAAQf,EAA0Be,EAA1Bf,UAAWE,EAAea,EAAfb,WAEbY,EAAa,YAAOnB,GAqB1B,OAnBIK,GACFc,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQlB,GACN,KAAKP,EACH,OAAOwB,EAAME,cAAcD,GAE7B,KAAKzB,EACH,OAAOwB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXlB,GACFY,EAAcO,UAGTP,EAOeQ,CAAgBb,EAAiB,CACrDT,YACAE,eAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEJ,UAAWA,EACXC,OAAQW,EACRV,WAAYA,EACZC,YAAaU,IAGf,cAAC,EAAD,CAAUlB,MAAOmB,QC9DvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ee2c0b5.chunk.js","sourcesContent":["export const SORT_FIELD = {\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n};\n","import React from 'react';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import classNames from 'classnames';\nimport { SORT_FIELD } from '../constants';\n\nexport const Buttons = (props) => {\n  const {\n    sortField,\n    sortBy,\n    isReversed,\n    changeOrder,\n  } = props;\n\n  const resetGoodsHandler = () => {\n    sortBy('');\n    changeOrder(false);\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        onClick={() => sortBy(SORT_FIELD.ALPHABET)}\n        className={classNames('button', 'is-info', {\n          'is-light': sortField !== SORT_FIELD.ALPHABET,\n        })}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => sortBy(SORT_FIELD.LENGTH)}\n        className={classNames('button', 'is-success', {\n          'is-light': sortField !== SORT_FIELD.LENGTH,\n        })}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => changeOrder(prev => !prev)}\n        className={classNames('button', 'is-warning', {\n          'is-light': !isReversed,\n        })}\n      >\n        Reverse\n      </button>\n\n      {(sortField || isReversed) && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={resetGoodsHandler}\n        >\n          Reset\n        </button>\n      )}\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { SORT_FIELD } from './constants';\nimport { GoodList } from './components/GoodList';\nimport { Buttons } from './components/Buttons';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGood(goods, options) {\n  const { sortField, isReversed } = options;\n\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedGoods = getPreparedGood(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortField={sortField}\n        sortBy={setSortField}\n        isReversed={isReversed}\n        changeOrder={setIsReversed}\n      />\n\n      <GoodList goods={preparedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}